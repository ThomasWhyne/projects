<style lang="stylus" scoped>
    @import "./../common/navbar__bg.styl"
    flex()
        display flex
        flex-direction row
        align-items center
        justify-content space-around
    w_h(w,h)
        width w
        height h

    .navbar
        w_h(100%,88rpx)
        flex()
        position fixed
        -webkit-margin-collapse collapse
        padding 10rpx
        border-bottom 1rpx solid #e5e5e5
        font-family KaiTi
        background-color #fff
        z-index 1
    .navbar-avatar
        w_h(10%,100%)
        box-sizing border-box
        padding-top 10rpx
    .navbar-avatar__thumb
        w_h(70rpx,70rpx)
        position relative
        padding 0 10rpx
        image
            w_h(52rpx,52rpx)
            position absolute
            border-radius 26rpx
            left 50%
            top 37rpx
            transform translate(-50%,-50%)
            background-color teal
    .navbar-tab
        w_h(80%,100%)
        flex()
        font-size 28rpx
        text-align center
        overflow scroll
    .navbar-tab__tabs
        w_h(100rpx,100%)
        position relative
        line-height 88rpx
        white-space nowrap
        letter-spacing 6rpx
        color #798a8c
     .navbar-tab__tabs--current
        color #26a9a2
        ::after
            content ""
            w_h(20%,5rpx)
            position absolute
            bottom 10%
            left 50%
            transform translate(-50%)
            border-radius 5rpx 
            background-color #26a9a2
    .navbar-tab--scroll
        display block
        overflow-x auto
        white-space nowrap
        .navbar-tab__tabs--scroll
            display inline-block
            margin 0 auto
    .navbar-message
        w_h(8%,100%)
        box-sizing border-box
        margin-right 20rpx
        padding 25rpx 25rpx 25rpx 0
        i
            display inline-block
            w_h(38rpx,38rpx)


</style>

<template>
    <view class="navbar">
        <view class="navbar-avatar" @tap="onTriggerSlide">
            <view class="navbar-avatar__thumb">
                <image src="https://q4.qlogo.cn/g?b=qq&k=oJrFtCuotoicerMypMmurIQ&s=140&t=1439899557"></image>
            </view>
        </view>
        <scroll-view wx:if="{{scrollable}}" scroll-x="true" class="navbar-tab navbar-tab--scroll">
            <block wx:for="tabList" wx:key="key">
                <view class="navbar-tab__tabs navbar-tab__tabs--scroll {{currentTab==item.key?'navbar-tab__tabs--current':''}}">
                    <text @tap="onTabChange({{item.key}})" data-key="{{item.key}}">{{item.title}}</text>
                </view>
            </block>
        </scroll-view>
        <view wx:else class="navbar-tab">
            <block wx:for="{{ tabList }}" wx:key="key">
                <view class="navbar-tab__tabs {{currentTab==item.key?'navbar-tab__tabs--current':''}}">
                    <block wx:if="{{!imageNav}}">
                        <text @tap="onTabChange({{item.key}})" data-key="{{item.key}}">{{item.title}}</text>
                    </block>
                    <block wx:else>
                        <image  @tap="onTabChange({{item.key}})" data-key="{{item.key}}" src="{{item.title}}"/>
                    </block>
                </view>
            </block>
        </view>
        <view class="navbar-message">
            <i></i>
        </view>
    </view>
</template>

<script>
import wepy from "wepy"

export default class Navbar extends wepy.component {

    props={
        tabList:{
            type:Array,
            default:[]
        },
        currentTab:{
            type:String,
            default:"tab1"
        },
        imageNav:{
            type:Boolean,
            default:false
        }
    }

    methods={
        onTabChange(key){
            this.currentTab=key;
            this.$apply();
            this.$emit('tabChanged',key);
        },
        onTriggerSlide(){
            this.$emit('togglePageShift');
        }
    }

    computed={
        scrollable(){
            //when greater than five use scroll-view otherwise view :
            return this.tabList.length>5;
        }
    }

    

}
</script>

